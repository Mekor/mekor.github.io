<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[李小争]]></title>
  <link href="http://www.citynight.cn/blog/atom.xml" rel="self"/>
  <link href="http://www.citynight.cn/blog/"/>
  <updated>2021-08-18T13:48:38+08:00</updated>
  <id>http://www.citynight.cn/blog/</id>
  <author>
    <name><![CDATA[]]></name>
    
  </author>
  <generator uri="http://www.coderforart.com/">CoderForArt</generator>

  
  <entry>
    <title type="html"><![CDATA[Scrollable]]></title>
    <link href="http://www.citynight.cn/blog/16293384343104.html"/>
    <updated>2021-08-19T10:00:34+08:00</updated>
    <id>http://www.citynight.cn/blog/16293384343104.html</id>
    <content type="html"><![CDATA[
<h2><a id="%E6%BB%9A%E5%8A%A8%E5%88%97%E8%A1%A8%E4%B8%8E%E5%8A%A8%E6%80%81%E5%8A%A0%E8%BD%BD" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>滚动列表与动态加载</h2>
<h3><a id="listview%E6%89%80%E6%9C%89%E5%AD%90%E6%8E%A7%E4%BB%B6%E4%B8%80%E6%AC%A1%E7%9B%B4%E6%8E%A5%E6%B8%B2%E6%9F%93" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>ListView 所有子控件一次直接渲染</h3>
<p>开发中常见的就是超出屏幕后提示Overflowing 像素超出屏幕了。这时最简单的办法就是外层控件换成ListView，这样就能上下滚动了。</p>
<h3><a id="listview-builder%E6%8C%89%E9%9C%80%E5%8A%A0%E8%BD%BD" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>ListView.builder 按需加载</h3>
<p>如果控件比较多肯定不可能一次直接加载所有元素。这时就用到了ListView.builder,可以实现类似UITableView按需加载的效果。</p>
<p>如果itemCount 不设置即为null的时候，是无限加载，如果itemCount 设置了大小就是加载到固定项数。</p>
<pre><code class="language-dart">...
ListView.builder(
	itemCount: 88,// 不设置就是无限加载，设置就加载该值的数量。
	itemBuilder:(content,index){
		print(&quot;building $index&quot;); // 打印当前在画的视图
		return Container(
			color: Colors.blue[(index%5)*100],
			height:100,
			alignment: Alignment.center,
			child: Text(&quot;$index&quot;),
		);
	}
);
</code></pre>
<p>如上图，就会打印出当前正在渲染第几个。<br />
<img src="media/16293384343104/3A2D24C6-1778-407B-99B0-65E6E53EB136.jpeg" alt="3A2D24C6-1778-407B-99B0-65E6E53EB136" /></p>
<p>如果想要改变缓冲区大小可以设置cacheExtent参数</p>
<pre><code class="language-dart">...
ListView.builder(
	itemCount: 100,// 不设置就是无限加载，设置就加载该值的数量。
	cacheExtent: 2000, // 缓冲区大小，逻辑像素为单位，如果设置为0即不想要缓冲，只加载渲染屏幕正在显示的组件
	itemBuilder:(content,index){
		print(&quot;building $index&quot;); // 打印当前在画的视图
		return Container(
			color: Colors.blue[(index%5)*100],
			height:100,
			alignment: Alignment.center,
			child: Text(&quot;$index&quot;),
		);
	}
);
</code></pre>
<h3><a id="listview-separated%E5%88%86%E5%89%B2%E7%BA%BF" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>ListView.separated 分割线</h3>
<p>基本用法和ListView.builder一样，只不过添加了separatorBuilder</p>
<pre><code class="language-dart">ListView.separated(
	itemCount:6,
	separatorBuilder: (content,index){
		return Divider(thickness: 2); //thickness 设置分割线粗细
	},
);
</code></pre>
<h2><a id="listview%E6%80%A7%E8%83%BD%E9%97%AE%E9%A2%98" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>ListView 性能问题</h2>
<h3><a id="%E8%AE%BE%E7%BD%AEitemextent" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>设置itemExtent</h3>
<p>如果每个item大小不一，这样在滑动ScrollBar的时候就会把所有中间位置的item都加载，加载速度会变慢，很耗性能。</p>
<p>ListView中有一个参数itemExtent，这个参数设置每一个item的固定大小，即使item Builder中的item有大小也会强制设置为itemExtent的值（主轴方向）。</p>
<p><img src="media/16293384343104/57658C3A-957B-4324-937E-E9CAF86A3EB8.jpeg" alt="57658C3A-957B-4324-937E-E9CAF86A3EB8" /></p>
<p>由上图也能看出，设置itemExtent后，主轴方向的大小就是itemExtent设置的值，不设置就是视图自己的值。交叉轴方向是要占满ListView的宽度/高度。</p>
<h3><a id="%E8%AE%BE%E7%BD%AEpadding" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>设置padding</h3>
<p>给ListView设置padding有三种方式</p>
<ol>
<li>
<p>给ListView外面加padding</p>
<pre><code class="language-dart">...
Padding(
	padding: const EdgeInsets.all(40),
	child: ListView.builder(
		...
	),
),
...
</code></pre>
<p>这种方式也就固定了ListView的视图padding</p>
</li>
<li>
<p>给item添加padding</p>
<pre><code class="language-dart">...
ListView.builder(
	itemBuilder:(content,index){
		return Padding(
			padding: EdgeInsets.symmetric(horizontal: 80),// 水平左右80
			child: Container(
				height:80,
				width: 80,
				color: Colors.blue,
			),
		);
	},
),
</code></pre>
<p>这种方式是给每一个item添加padding</p>
</li>
<li>
<p>设置padding属性。</p>
<pre><code class="language-dart">...
ListView.builder(
	padding: const EdgeInsets.all(33.0),
	itemBuilder: ...
),
...
</code></pre>
<p>这种方式能看到左右的交叉轴方向立即显示padding对应的大小，而主轴方向则显示类似为iOS 中Scroll View中的scrollOfSet</p>
</li>
</ol>
<h3><a id="%E8%AE%BE%E7%BD%AEcontroller" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>设置controller</h3>
<p>ListView中有一个属性是controller，我们可以给ListView设置controller，从而设置List View滚动相关的控制.</p>
<pre><code class="language-dart">...
final _controller = ScrollController();

...
return Scaffold(
	appBar: AppBar(
		title: GestureDetector(
			onTap:() {
				//_controller.jumpTo(0.0);// 跳转到第一
				_controller.animateTo(-20,duration:Duration(seconds:1),curve:Curves.linear,);// 动画跳转，设置为负像素能超出范围然后反弹，持续时间1s，线性动画
			},
			child: Text(&quot;ListView Demo&quot;),
		),
	),
);
</code></pre>
<p>我们也可以通过_controller.offSet知道目前的位置（逻辑像素）</p>
<h3><a id="%E8%AE%BE%E7%BD%AEphysics" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>设置physics</h3>
<p>像安卓一样的效果，可以设置为</p>
<p>ClampingScrollPhysics</p>
<p>像iOS一样的效果，可以设置为</p>
<p>BouncingScrollPhysics</p>
<p>不能滚动</p>
<p>NeverScrollableScrollPhysics</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[避免和WillPopScope与iOS手势冲突]]></title>
    <link href="http://www.citynight.cn/blog/16292522945585.html"/>
    <updated>2021-08-18T10:04:54+08:00</updated>
    <id>http://www.citynight.cn/blog/16292522945585.html</id>
    <content type="html"><![CDATA[
<p>开发中有一个需求，表单填写中点击返回按钮需要提示。这个需求可以使用WillPopScope处理</p>
<pre><code class="language-dart">bool _locked = false;
...
return Scaffold(
	appBar: AppBar(title:&quot;Detail Page&quot;),
	body: WillPopScope(
		onWillPop: () async {
			print(&quot;这里处理退出前的逻辑处理&quot;);
			if(_locked) {
				return false; // 锁住的时候不允许返回
			} else {
				reutrn true; // 没有锁的时候直接返回
			}
		},	
		child: Center(
			child: TextButton(
				child:Icon_locked ? Icons.lock : Icons.lock_open, size: 200),
				onPressed: () =&gt; setState(()=&gt;_locked = !_locked),
			),
		),
	),
);
</code></pre>
<p>使用WillPopScope 使用的时候就没有了iOS平台的侧滑返回了。</p>
<h2><a id="%E4%B8%8D%E8%83%BD%E4%BE%A7%E6%BB%91%E8%BF%94%E5%9B%9E%E7%9A%84%E5%8E%9F%E5%9B%A0%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>不能侧滑返回的原因是什么？</h2>
<p>在<code>route.dart</code>文件中能看到有一个私有方法<code>_isPopGestureEnabled</code>。这个方法会判断当前是否是第一个是否是全屏Dialog等。其中有一种情况就是<code>hasScopedWillPopCallback</code></p>
<h2><a id="%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>解决方案</h2>
<ol>
<li>不使用WillPopScope组件，而是手动添加或者移出WillPopCallback</li>
</ol>
<pre><code class="language-dart">bool _locked = false;
...
return Scaffold(
	appBar: AppBar(title:&quot;Detail Page&quot;),
	body:
		Center(
			child: TextButton(
				child:Icon_locked ? Icons.lock : Icons.lock_open, size: 200),
				onPressed: (){ 
					setState(()=&gt;_locked = !_locked);
					if(_locked) {
						ModalRoute.of(context)!.addScopedWillPopCallback(preventExit);
					} else {
						ModalRoute.of(context)!.removeScopedWillPopCallback(prevenExit);
					}

				},
			),
		);
);

...

Future&lt;bool&gt; preventExit() async =&gt; false;
</code></pre>
<ol start="2">
<li>还是在onWillPopScope组件中进行处理</li>
</ol>
<pre><code class="language-dart">bool _locked = false;
...
return Scaffold(
	appBar: AppBar(title:&quot;Detail Page&quot;),
	body: WillPopScope(
		onWillPop: _locked ? () async =&gt; false : null,
		child: Center(
			child: TextButton(
				child:Icon_locked ? Icons.lock : Icons.lock_open, size: 200),
				onPressed: () =&gt; setState(()=&gt;_locked = !_locked),
			),
		),
	),
);
</code></pre>
<p>这样处理的原因是<code>will_pop_scope.dart</code> 中，在133行 <code>didUpdateWidget</code>中会对是否有<code>onWillPop</code>进行判断，如果为<code>onWillPop</code>是null的时候不会添加。</p>
<h2><a id="%E9%A1%B9%E7%9B%AE%E4%B8%AD%E8%BF%98%E6%9C%89%E4%B8%80%E7%A7%8D%E6%96%B9%E5%BC%8F%E5%B0%B1%E6%98%AF%E8%87%AA%E5%AE%9A%E4%B9%89appbar%E7%9A%84leading" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>项目中还有一种方式就是自定义AppBar的leading</h2>
<pre><code>appBar: AppBar(
  leading: IconButton(
    icon: Icon(Icons.arrow_back, color: Colors.black),
    onPressed: () =&gt; Navigator.of(context).pop(),
  ), 
  title: Text(&quot;Sample&quot;),
  centerTitle: true,
),
</code></pre>
<p>这种方式对iOS侧滑返回和Android实体键返回没有效果。<br />
如果将上述返回修改为</p>
<pre><code>Navigator.of(context).maybePop();
</code></pre>
<p>这样就会调用包裹body的<code>WillPopScope</code>.</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[方便实用的小组件]]></title>
    <link href="http://www.citynight.cn/blog/16291783311992.html"/>
    <updated>2021-08-17T13:32:11+08:00</updated>
    <id>http://www.citynight.cn/blog/16291783311992.html</id>
    <content type="html"><![CDATA[
<h2><a id="1-fittedbox" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>1. FittedBox</h2>
<pre><code>这个组件可以缩放子组件，组件的大小不够的时候可以缩放子组件。比如：

```dart
Container(
	color: Colors.red,
	width:double.infinity,
	child:FittedBox(
		fit: BoxFit.sacleDown, // 小于等于当前的控件大小. 也就是字体小于等于20
		child:Text(&quot;You have pushed the button this many times&quot;, style: TextStyle(fontSize:20),),	
	),	
),
```

当Container组件所在的宽度不够文本宽度的时候，就会缩小文本的字体大小。
</code></pre>
<h2><a id="2-safearea" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>2. SafeArea</h2>
<pre><code>和iOS中的SafeArea一样，为了异形屏显示而做的适配工作。

```dart
// 除了 top/bottom/left/right 等参数可以设置外，还有一个好用的参数 minimum。这个参数可以设置最小padding，也就是满足安全区域的时候使用安全区域，没有安全区域的时候使用minimum。
```

注意： 使用的时候不要把Safe Area 放在顶层，哪里需要放在哪里就好了，有些组件就是需要延伸到安全区域才美观的。
</code></pre>
<h2><a id="3-layoutbuilder" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>3. LayoutBuilder</h2>
<pre><code>约束组件，会把constraint传递给子组件。

```dart
...
LayoutBuilder(
	builder: (BuildContext context, BoxConstraints constranits) {
		print(constraints);
		return SizedBox(
			height: constraints.maxHeight / 2,
			child: Text(&quot;xxxxxxxx&quot; * 500),
		);
	}
),
```

上述代码实现了文本组件是父组件一半的高度。当然也可以使用Culum之类的组件通过Expend做到类似的效果。

首页中可以使用LayoutBuilder计算剩余的空间，而不用使用MediaQuery.of(content).size 来自己就散各个组件的高度。
</code></pre>
<h2><a id="4-defaulttextstyle" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>4. DefaultTextStyle</h2>
<pre><code>默认的文本样式，这样子组件就能使用外层的默认样式了。

```dart
...
DefaultTextStyle(
	style: TextStyle(color: Colors.red),// 子组件如果没有设置颜色的话就会使用改处设置的颜色。
	child: Center(
		child: Column(
			mainAxisAlignment: MainAxisAlignment.center,
			children:&lt;Widget&gt;[Text(&quot;hhhh&quot;),Text(&quot;字体大小更改&quot;,style: TextStyle(fontSize:48)),Text(&quot;颜色使用自己的&quot;,style: TextStyle(color: Colors.black))],
		),	
	),
),
```

当然我们使用的过程中如果需要使用上层组件的样式可以这样。DefaultTextStyle.merge 这样默认样式就会和上层的样式merge。比如Scaffold中也会有默认样式（Material中会有默认样式），我们只是想要更改颜色就可以这样写：

```dart
return Scaffold(
	...
	body: DefaultTextStyle.merge(
		style: TextStyle(color: Colors.red),// 这样就会设置默认的颜色为红色，其他的样式使用上层的样式。
	),
);
```

隐式动画

AnimatedDefaultTextStyle
</code></pre>
<h2><a id="5-interactiveviewer" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>5. InteractiveViewer</h2>
<pre><code>如果子组件超出屏幕范围可以任意方向滚动

```dart
...
InteractiveViewer(
	constrained: false,// 表示不去约束子组件
	child: SizeBox(
		width: 800, // 超出屏幕宽度，这样能狗左右滑动
		maxScale:5, // 最大缩放5倍
		minScale:0.2,// 最小缩放0.2倍

		child: Column(
			mainAxisAlignment: MainAxisAlignment.center,
			children:&lt;Widget&gt;[Text(&quot;hello world&quot; * 200),],
		),
	),

),
```

SingleChildScrollView 是一个维度的滚动，InteractiveViewer是二维滚动。
</code></pre>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Flutter 中 TabBarView 点击切换，监听会调用多出]]></title>
    <link href="http://www.citynight.cn/blog/16267829476143.html"/>
    <updated>2021-07-20T20:09:07+08:00</updated>
    <id>http://www.citynight.cn/blog/16267829476143.html</id>
    <content type="html"><![CDATA[
<h2><a id="%E8%B0%83%E7%94%A8%E5%A4%9A%E6%AC%A1%E5%8E%9F%E5%9B%A0" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>调用多次原因</h2>
<p>在Flutter源码中 <code>src/material/tab_controller.dart</code> 中 <code>void _changeIndex(int value, { Duration? duration, Curve? curve })</code> 方法里面动画调用会通知两次</p>
<pre><code class="language-Swift">
  void _changeIndex(int value, { Duration? duration, Curve? curve }) {
    assert(value != null);
    assert(value &gt;= 0 &amp;&amp; (value &lt; length || length == 0));
    assert(duration != null || curve == null);
    assert(_indexIsChangingCount &gt;= 0);
    if (value == _index || length &lt; 2)
      return;
    _previousIndex = index;
    _index = value;
    if (duration != null) { // 有动画执行
      _indexIsChangingCount += 1;
      // 通知1: 这里通知监听者 indexIsChanging
      notifyListeners(); // Because the value of indexIsChanging may have changed.
      _animationController!
        .animateTo(_index.toDouble(), duration: duration, curve: curve!)
        .whenCompleteOrCancel(() {
          if (_animationController != null) { // don't notify if we've been disposed  已经释放就不在通知
            _indexIsChangingCount -= 1;
            // 通知2：这里通知监听者 动画完成
            notifyListeners();
          }
        });
    } else {
      _indexIsChangingCount += 1;
      _animationController!.value = _index.toDouble();
      _indexIsChangingCount -= 1;
      // 不执行动画 只通知一次
      notifyListeners();
    }
  }
</code></pre>
<h2><a id="%E6%80%8E%E4%B9%88%E8%A7%A3%E5%86%B3%E5%91%A2" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>怎么解决呢</h2>
<p>在该文件第222行中</p>
<pre><code>  _animationController!
        .animateTo(_index.toDouble(), duration: duration, curve: curve!)
</code></pre>
<p>这里是动画执行的时候把目标<code>target</code>传递给 <code>_animationController</code>, 而<code>animation_controller.dart</code> 中会做判断</p>
<ol>
<li>
<p>在第593行</p>
<pre><code>if (target == value) {
  // Already at target, don't animate.
  simulationDuration = Duration.zero;
}
</code></pre>
</li>
<li>
<p>在第600行</p>
<pre><code>_value = target.clamp(lowerBound, upperBound);
</code></pre>
</li>
</ol>
<p>执行到最后的时候 <code>_value</code> 就是传入的<code>target</code>。 如果不执行动画会直接进行赋值操作<code>_animationController!.value = _index.toDouble();</code> 。所以我们可以在通知中判断动画的值是否和target一致，一致就是动画完成了。这时再做处理就不会执行多次了。</p>
<p>所以我们可以做如下判断：</p>
<pre><code>_tabController.addListener(() {
    if(_tabController.index.toDouble() == _tabController.animation!.value){
      // 这里是我们要执行的。。。
    }
});
</code></pre>
<h2><a id="%E8%BF%99%E9%87%8C%E5%A6%82%E6%9E%9C%E6%98%AF%E6%88%91%E8%A6%81%E6%80%8E%E4%B9%88%E8%AE%BE%E8%AE%A1" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>这里如果是我要怎么设计</h2>
<p><code>tab_controller.dart</code> 是经常和动画打交道的，所以可以选择添加</p>
<pre><code>void addStatusListener(AnimationStatusListener listener) {
  didRegisterListener();
  _statusListeners.add(listener);
}
</code></pre>
<p>根据状态来进行选择执行操作,这样也符合苹果设计的通知，notification中可以添加info根据info做判断。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Flutter 中 listView 嵌套 listView]]></title>
    <link href="http://www.citynight.cn/blog/16267690953146.html"/>
    <updated>2021-07-20T16:18:15+08:00</updated>
    <id>http://www.citynight.cn/blog/16267690953146.html</id>
    <content type="html"><![CDATA[
<p><img src="media/16267690953146/Simulator%20Screen%20Shot%20-%20iPhone%2012%20-%202021-07-20%20at%2016.18.53.png" alt="Simulator Screen Shot - iPhone 12 - 2021-07-20 at 16.18.53" /></p>
<p>实现上述嵌套效果只需要在里面的listView中使用</p>
<pre><code>      shrinkWrap: true,
      physics: NeverScrollableScrollPhysics(),
</code></pre>
<p><img src="media/16267690953146/16267694115272.jpg" alt="" style="width:498px;" /><br />
被嵌套的listView<br />
<img src="media/16267690953146/16267694690429.jpg" alt="" style="width:637px;" /></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Flutter中Row中的子控件左右两端对齐]]></title>
    <link href="http://www.citynight.cn/blog/16261554677251.html"/>
    <updated>2021-07-13T13:51:07+08:00</updated>
    <id>http://www.citynight.cn/blog/16261554677251.html</id>
    <content type="html"><![CDATA[
<p>假如我们要实现这样一个效果：两个子控件（例如2个文本）在一行显示，但我们想让它们分别左右两侧对齐，也就是左右一边一个。如何实现呢？<br />
方法一：<br />
设置 spaceBetween 对齐方式 设置 Row 控件的属性 mainAxisAlignment： mainAxisAlignment: MainAxisAlignment.spaceBetween,<br />
方法二：Expanded 填充 使用 Expanded 中间填充布局空间：<br />
new Row( children: [ new Text(&quot;开始日期：&quot;), Expanded(child: SizedBox()), new Text(“2020-12-29&quot;), ],),<br />
方法三：使用 Spacer() 填充<br />
new Row( children: [ new Text(&quot;开始日期：&quot;), Spacer(), new Text(“2020-12-29&quot;), ],),<br />
方法四：使用 Flexible<br />
new Row( children: [ new Text(&quot;开始日期：&quot;), Flexible(fit: FlexFit.tight, child: SizedBox()), new Text(“2020-12-29&quot;), ],),</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[flutter 多环境设置]]></title>
    <link href="http://www.citynight.cn/blog/16246203092572.html"/>
    <updated>2021-06-25T19:25:09+08:00</updated>
    <id>http://www.citynight.cn/blog/16246203092572.html</id>
    <content type="html"><![CDATA[
<p>Flutter开发中我们需要切换不同的环境进行数据处理</p>
<h2><a id="%E5%8E%9F%E7%90%86" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>原理</h2>
<p>根据Dart-Define进行参数控制</p>
<p>具体接收参数的实现在 env_config.dart 文件中</p>
<p>代码如下：<img src="media/16246203092572/image2021-6-25%2019_15_8.png" alt="image2021-6-25 19_15_8" /></p>
<h2><a id="%E4%BC%A0%E9%80%92%E5%8F%82%E6%95%B0" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>传递参数</h2>
<p>我们可以直接输入命令行进行运行，可以使用shell进行脚本封装，也可以使用开发工具进行设置。</p>
<h3><a id="shell%E8%84%9A%E6%9C%AC%E5%90%AF%E5%8A%A8%E6%96%B9%E5%BC%8F" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>shell脚本启动方式</h3>
<p>已经写好了简单的执行脚本位置如下：</p>
<p><img src="media/16246203092572/image-20210625182202555.png" alt="image-20210625182202555" /></p>
<p><strong>使用方式</strong></p>
<ol>
<li>
<p>先赋予脚本读、执行权限 <code>chmod 755 ./scripts/run.sh</code></p>
</li>
<li>
<p>执行对应的脚本</p>
<pre><code class="language-shell"># 开发环境
./script/run.sh dev
# 测试环境
./script/run.sh test
# 发布环境
./script/run.sh release
</code></pre>
<p>当然也可以直接在命令行中直接输入运行。</p>
<h3><a id="%E4%BD%BF%E7%94%A8android-studio%E8%BF%9B%E8%A1%8C%E8%AE%BE%E7%BD%AE" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>使用Android Studio 进行设置</h3>
</li>
<li>
<p>编辑配置信息<img src="media/16246203092572/image-20210625171212841.png" alt="image-20210625171212841" /></p>
</li>
<li>
<p>设置参数<img src="media/16246203092572/image-20210625171413373.png" alt="image-20210625171413373" /></p>
</li>
<li>
<p>设置其他环境的参数<img src="media/16246203092572/image-20210625181701520.png" alt="image-20210625181701520" /></p>
</li>
<li>
<p>配置完成<img src="media/16246203092572/image-20210625181827464.png" alt="image-20210625181827464" /></p>
</li>
<li>
<p>开发中选择对应的环境执行<br />
<img src="media/16246203092572/image-20210625182807269.png" alt="image-20210625182807269" /></p>
</li>
</ol>
<h3><a id="vscode%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>VSCode环境配置</h3>
<p><img src="media/16246203092572/image-20210625184614465.png" alt="image-20210625184614465" /></p>
<p>执行的时候选择对应的环境进行执行</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS 开发环境配置]]></title>
    <link href="http://www.citynight.cn/blog/16189060168232.html"/>
    <updated>2021-04-20T16:06:56+08:00</updated>
    <id>http://www.citynight.cn/blog/16189060168232.html</id>
    <content type="html"><![CDATA[
<ol>
<li>
<p>安装Xcode(Version 12.4)</p>
<p>不要去App Store下载安装，因为App Store会自动更新，为了确保Xcode版本一致需要去开发者网站下载 <a href="https://developer.apple.com/download/more/">Apple Developer</a></p>
</li>
<li>
<p>安装brew</p>
<ol>
<li>
<p>由于访问外网太慢，建议从gitee安装</p>
<pre><code class="language-shell">/bin/zsh -c &quot;$(curl -fsSL https://gitee.com/cunkai/HomebrewCN/raw/master/Homebrew.sh)&quot;
</code></pre>
</li>
<li>
<p>可以选择科大的源也可以选择清华的源，我一般用清华的源</p>
</li>
</ol>
</li>
<li>
<p>安装rbenv</p>
<ol>
<li>
<p>rbenv是 Ruby 环境管理工具 <code>brew install rbenv</code></p>
</li>
<li>
<p>更新配置文件</p>
<pre><code class="language-sh">export PATH=&quot;$HOME/.rbenv/bin:$PATH&quot; 
eval &quot;$(rbenv init -)&quot;
</code></pre>
</li>
<li>
<p>我现在用的Ruby环境是2.7.1</p>
<pre><code class="language-shell">$ cd $(PROJECT_DIR)
$ rbenv install 2.7.1
$ rbenv local 2.7.1
</code></pre>
</li>
</ol>
</li>
<li>
<p>安装Bundler</p>
<ol>
<li>
<p>执行<code>gem install bundler</code>命令进行，之后，再执行<code>bundle init</code>就可以生成一个 Gemfile 文件</p>
</li>
<li>
<p>添加CocoaPods 和 fastlane 等依赖包</p>
<pre><code class="language-shell">source &quot;https://rubygems.org&quot;

gem &quot;cocoapods&quot;, &quot;1.10.1&quot;
gem &quot;fastlane&quot;,&quot;2.180.1&quot;
</code></pre>
</li>
</ol>
</li>
<li>
<p>使用脚本确认环境</p>
<pre><code class="language-shell"># Install ruby using rbenv

ruby_version=`cat .ruby-version`
if [[ ! -d &quot;$HOME/.rbenv/versions/$ruby_version&quot; ]]; then
  rbenv install $ruby_version;
fi
# Install bunlder
gem install bundler
# Install all gems
bundle install
# Install all pods
bundle exec pod install

</code></pre>
<p>​	脚本主要做了四件事情，第一步是在 rbenv 下安装特定版本的 Ruby 开发环境，然后通过 RubyGems 安装 Bunlder，接着使用 Bundler 安装 CocoaPods 和 fastlane 等依赖包，最后安装各个 Pod。这样，一个统一的项目环境就搭建完成了，接下来开发者就可以打开 <strong>项目名.xcworkspace</strong>进行开发了.</p>
</li>
<li>
<p>项目添加gitignore</p>
<p>可以去gitignore.io 输入Xcode，Swift等关键字生成.gitignore文件</p>
</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AR 模型格式转换和导入]]></title>
    <link href="http://www.citynight.cn/blog/16158207840706.html"/>
    <updated>2021-03-15T23:06:24+08:00</updated>
    <id>http://www.citynight.cn/blog/16158207840706.html</id>
    <content type="html"><![CDATA[
<p>需要软件：Reality Converter 去 <a href="https://developer.apple.com/download/">https://developer.apple.com/download/</a> 下载<br />
<img src="media/16158207840706/16158208366495.jpg" alt="" style="width:1086px;" /></p>
<p>AR创作中使用USD格式，然后使用Reality Converter 转换成 USDZ格式</p>
<p>模型来源，除了自己制作外还可以通过网上其他人分享的模型来用，比如在 <a href="https://sketchfab.com/">https://sketchfab.com/</a> 中可以搜索自己喜欢的模型。</p>
<p>比如这个模型是gltf格式的，可以下载后把解压后的文件夹拖拽到 Reality Converter 中<br />
<img src="media/16158207840706/16158221517356.jpg" alt="" style="width:900px;" /><br />
然后选择文件-&gt; 导出  这时就导出了usdz格式的模型。</p>
<p><img src="media/16158207840706/16158224521993.jpg" alt="" style="width:448px;" /><br />
打开后选择文件-&gt; 新建</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[节流防抖]]></title>
    <link href="http://www.citynight.cn/blog/16158207797865.html"/>
    <updated>2021-03-15T23:06:19+08:00</updated>
    <id>http://www.citynight.cn/blog/16158207797865.html</id>
    <content type="html"><![CDATA[
<p>节流和防抖演示网站： <a href="http://demo.nimius.net/debounce_throttle/">http://demo.nimius.net/debounce_throttle/</a></p>
<p><strong>防抖 Debounce</strong></p>
<p>防抖的情况，有点像一个极度珍惜 执行机会的人，只要时间段内，有任务来，就再等一会。<br />
等到最后一次，超过一定时间，确定没有新任务了，才去做执行。<br />
1. 列表刷新，为避免短时间内反复 reload，可以多次合并为一次<br />
2. TCP 流量控制</p>
<p><strong>节流 Throttle</strong></p>
<p>节流比较好理解，在一定时间段内，丢弃掉其它触发，就做一次执行<br />
1. 防止多次点击<br />
2. 重复发多个网络请求</p>
<pre><code>import Foundation

/// 防抖
public class Debouncer {
    public let label: String
    public let interval: DispatchTimeInterval
    private let queue: DispatchQueue
    private let semaphore: DispatchSemaphoreWrapper
    private var workItem: DispatchWorkItem?
    
    
    public init(label: String, interval: Float, qos: DispatchQoS = .userInteractive) {
        self.interval         = .milliseconds(Int(interval * 1000))
        self.label         = label
        self.queue = DispatchQueue(label: &quot;cn.citynight.debouncer.internalqueue.\(label)&quot;, qos: qos)
        self.semaphore = DispatchSemaphoreWrapper(withValue: 1)
    }
    
    
    public func call(_ callback: @escaping (() -&gt; ())) {
        
        self.semaphore.sync  { () -&gt; () in
            
            
            self.workItem?.cancel()
            
            self.workItem = DispatchWorkItem {
                callback()
            }
            
            if let workItem = self.workItem {
                
                self.queue.asyncAfter(deadline: .now() + self.interval, execute: workItem)
            }
        }
    }
    
}
 

/// 节流
public class Throttler {
    
    private let queue: DispatchQueue = DispatchQueue.global(qos: .background)
    
    private var job: DispatchWorkItem = DispatchWorkItem(block: {})
    private var previousRun: Date = Date.distantPast
    private var maxInterval: Int
    private let semaphore: DispatchSemaphoreWrapper
    
    init(seconds: Int) {
        self.maxInterval = seconds
        self.semaphore = DispatchSemaphoreWrapper(withValue: 1)
    }
    
    
    func throttle(block: @escaping () -&gt; ()) {
        
        self.semaphore.sync  { () -&gt; () in
            job.cancel()
            job = DispatchWorkItem(){ [weak self] in
                self?.previousRun = Date()
                block()
            }
            let delay = Date.second(from: previousRun) &gt; maxInterval ? 0 : maxInterval
            queue.asyncAfter(deadline: .now() + Double(delay), execute: job)
        }
        
    }
}
 

/// DispatchSemaphore保证线程安全
public struct DispatchSemaphoreWrapper {
    
    private let semaphore: DispatchSemaphore
    
    public init(withValue value: Int) {
        
        self.semaphore = DispatchSemaphore(value: value)
    }
    
    public func sync&lt;R&gt;(execute: () throws -&gt; R) rethrows -&gt; R {
        
        _ = semaphore.wait(timeout: DispatchTime.distantFuture)
        defer { semaphore.signal() }
        return try execute()
    }
}

private extension Date {
    static func second(from referenceDate: Date) -&gt; Int {
        return Int(Date().timeIntervalSince(referenceDate).rounded())
    }
}

</code></pre>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Flutter 环境变量设置]]></title>
    <link href="http://www.citynight.cn/blog/16154734553187.html"/>
    <updated>2021-03-11T22:37:35+08:00</updated>
    <id>http://www.citynight.cn/blog/16154734553187.html</id>
    <content type="html"><![CDATA[
<p>我把flutter文件夹拖到资源库中<br />
<img src="media/16154734553187/16154735272429.jpg" alt="" style="width:920px;" /></p>
<p>然后更改环境变量</p>
<pre><code>code ~/.bash_profile
</code></pre>
<p>在环境变量后面添加flutter的环境变量</p>
<pre><code>export PATH=/Users/logan/Library/flutter/bin:$PATH
</code></pre>
<p>然后看下版本号</p>
<pre><code>flutter --version
</code></pre>
<p>然后看到输出类似</p>
<pre><code>Flutter 2.0.1 • channel stable • https://github.com/flutter/flutter.git
Framework • revision c5a4b4029c (7 days ago) • 2021-03-04 09:47:48 -0800
Engine • revision 40441def69
Tools • Dart 2.12.0
</code></pre>
<p>这样就没有问题了</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SSH 免密登录设置]]></title>
    <link href="http://www.citynight.cn/blog/16153819894563.html"/>
    <updated>2021-03-10T21:13:09+08:00</updated>
    <id>http://www.citynight.cn/blog/16153819894563.html</id>
    <content type="html"><![CDATA[
<p><img src="media/16153819894563/IMG_1E8AAA2E770B-1.jpeg" alt="IMG_1E8AAA2E770B-1" /></p>
<ol>
<li>首先进入 ssh 文件夹</li>
</ol>
<pre><code>cd ~/.ssh
</code></pre>
<ol start="2">
<li>然后生成公钥和私钥</li>
</ol>
<pre><code>ssh-keygen
</code></pre>
<p>按三次回车，这样就生成了公钥和私钥，</p>
<ol>
<li>把生成的公钥追加到服务器的授权文件的尾部</li>
</ol>
<pre><code>ssh-copy-id root@192.168.1.7 
</code></pre>
<p>这样就完成了免密登录的设置<br />
<img src="media/16153819894563/16153824552757.jpg" alt="" style="width:606px;" /></p>
<p>追加完后我们可以看下是否一致<br />
<img src="media/16153819894563/16153840301369.jpg" alt="" style="width:606px;" /><br />
我们能看到服务端授权文件追加的公钥就是我们客户端生成的公钥。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Flutter 相关网站]]></title>
    <link href="http://www.citynight.cn/blog/16152544377232.html"/>
    <updated>2021-03-09T09:47:17+08:00</updated>
    <id>http://www.citynight.cn/blog/16152544377232.html</id>
    <content type="html"><![CDATA[
<p><a href="https://github.com/flutter/flutter/issues">github地址</a></p>
<p><a href="https://flutterchina.club/">Flutter中文网</a></p>
<p>三方库网站  <a href="https://pub.dev">https://pub.dev</a></p>
<h1><a id="%E4%BD%BF%E7%94%A8flutter%E6%8A%80%E6%9C%AF%E7%9A%84-app" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>使用Flutter 技术的App</h1>
<ul>
<li>MOO 腾讯音乐App <a href="https://mp.weixin.qq.com/s/ChbXxcd_k6_CSvI6VxwTyg">https://mp.weixin.qq.com/s/ChbXxcd_k6_CSvI6VxwTyg</a></li>
<li>闲鱼App  闲鱼Flutter技术文章专栏：<a href="https://www.zhihu.com/column/xytech">https://www.zhihu.com/column/xytech</a>  被吐槽 <a href="https://maimai.cn/web/feed_detail?fid=1573956025&amp;efid=H20EJR0aOjBt9e_HmpcW5g&amp;use_rn=1">https://maimai.cn/web/feed_detail?fid=1573956025&amp;efid=H20EJR0aOjBt9e_HmpcW5g&amp;use_rn=1</a></li>
<li>飞猪App <a href="https://juejin.cn/post/6937254156776243231">https://juejin.cn/post/6937254156776243231</a></li>
<li>美团（美团外卖App上有应用，美团主要用原生+RN） <a href="https://tech.meituan.com/tags/flutter.html">https://tech.meituan.com/tags/flutter.html</a></li>
</ul>
<h1><a id="flutter%E8%B6%8B%E5%8A%BF" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>Flutter趋势</h1>
<p>flutter热词搜索情况 <a href="https://trends.google.com/trends/explore?date=today%205-y&amp;geo=US&amp;q=flutter">https://trends.google.com/trends/explore?date=today%205-y&amp;geo=US&amp;q=flutter</a></p>
<p><img src="media/16152544377232/16152544977518.jpg" alt="" style="width:1675px;" /><br />
<img src="media/16152544377232/16152545180865.jpg" alt="" style="width:1679px;" /></p>
<p>百度指数</p>
<p><img src="media/16152544377232/16152545369692.jpg" alt="" style="width:1317px;" /></p>
<h1><a id="%E8%AE%BE%E5%A4%87%E3%80%81%E7%B3%BB%E7%BB%9F%E4%BD%BF%E7%94%A8%E6%83%85%E5%86%B5" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>设备、系统使用情况</h1>
<p>百度统计情况：<a href="https://tongji.baidu.com/research/app">https://tongji.baidu.com/research/app</a></p>
<p>苹果手机</p>
<p><img src="media/16152544377232/16152545486874.jpg" alt="" style="width:508px;" /></p>
<p><img src="media/16152544377232/16152545614616.jpg" alt="" style="width:473px;" /></p>
<p>安卓手机：</p>
<p><img src="media/16152544377232/16152545701527.jpg" alt="" style="width:490px;" /><br />
<img src="media/16152544377232/16152545805059.jpg" alt="" style="width:473px;" /></p>
<h1><a id="%E7%B3%BB%E7%BB%9F%E4%BD%BF%E7%94%A8%E6%83%85%E5%86%B5" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>系统使用情况</h1>
<p><img src="media/16152544377232/16152545904534.jpg" alt="" style="width:527px;" /><br />
<img src="media/16152544377232/16152546057902.jpg" alt="" style="width:479px;" /><br />
<img src="media/16152544377232/image-20210308223439673.png" alt="image-20210308223439673" /><br />
<img src="media/16152544377232/16152548733751.jpg" alt="" style="width:478px;" /></p>
<h1><a id="%E7%BB%93%E8%AE%BA" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>结论</h1>
<p>阿里巴巴淘系技术的回答 - 知乎 <a href="https://www.zhihu.com/question/374113031/answer/1252582543">https://www.zhihu.com/question/374113031/answer/1252582543</a></p>
<p>TechLead Show 的观点 <a href="https://www.youtube.com/watch?v=AvXSFUi022s">https://www.youtube.com/watch?v=AvXSFUi022s</a></p>
<p>目前存在问题：</p>
<ol>
<li><a href="https://github.com/flutter/flutter/issues">https://github.com/flutter/flutter/issues</a>  ，好多问题没有解决，同时也说明反馈的人多热度不错。</li>
<li>同时也能发现大厂的主要应用暂时没有使用Flutter，在新业务场景中开始尝试使用Flutter。</li>
<li>需要学习Dart语言，适应新的UI开发（大约需要一周多适应）</li>
</ol>
<p>目前公司产品中，我认为供应链项目，食堂App（客户端和商家端）完全可以使用Flutter进行开发，iPad点菜系统我认为不太合适。Flutter在动画和手势方面比原生还是有差距，而且在老旧设备的兼容性上面Flutter还不太行。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使用iOS模拟器测试“磁盘空间不足”情况的实用方法是什么？]]></title>
    <link href="http://www.citynight.cn/blog/16026633643718.html"/>
    <updated>2020-10-14T16:16:04+08:00</updated>
    <id>http://www.citynight.cn/blog/16026633643718.html</id>
    <content type="html"><![CDATA[
<p>创建一个小磁盘映像:</p>
<pre><code>hdiutil create -size 2m -fs HFS+ /tmp/2meg.dmg
</code></pre>
<p>将其挂载到模拟器应用程序中的相关目录，例如:</p>
<pre><code>hdiutil attach /tmp/2meg.dmg -mountpoint /Users/.../Library/Developer/CoreSimulator/Devices/.../data/Applications/.../Library/Caches
</code></pre>
<p>运行应用程序并执行测试。也可以在应用运行时完成此操作。在这种情况下，您可能不想直接将其安装为<code>Caches</code>或<code>Documents</code>目录，因为这会将当前文件隐藏在那些文件夹中。改为挂载到子目录。如果在不更改应用程序路径的情况下很难做到这一点，请在将映像挂载到非空目录之上之前，将映像挂载到其他位置并复制数据。</p>
<p>卸载:</p>
<pre><code>hdiutil detach /Users/.../Library/Developer/CoreSimulator/Devi...
</code></pre>
<p>但是，请注意，如果移动安装点，则分离操作将失败。这总是发生，因为每次运行应用程序时，Apple都会在iOS 8上重命名模拟器目录。在这种情况下，请使用<code>mount</code>命令查找已安装的设备，例如<code>/dev/disk3s1 /Users/.../Library/...</code>，然后使用设备名称而不是安装点来卸载磁盘映像:</p>
<pre><code>hdiutil detach disk3s1
</code></pre>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[JDBC Class.forName vs DriverManager.registerDriver]]></title>
    <link href="http://www.citynight.cn/blog/15990466411900.html"/>
    <updated>2020-09-02T19:37:21+08:00</updated>
    <id>http://www.citynight.cn/blog/15990466411900.html</id>
    <content type="html"><![CDATA[
<p>要使用JDBC与数据库连接，需要选择获取相应数据库的驱动程序并注册该驱动程序,有两种方式可以注册</p>
<pre><code>DriverManager.registerDriver(new com.mysql.jdbc.Driver());
</code></pre>
<pre><code>Class.forName(&quot;com.mysql.jdbc.Driver&quot;);
</code></pre>
<p>当然现在也可以不用执行上面的操作也能正常执行,原因就是<code>SPI机制</code><br />
<a href="https://juejin.im/post/6844903605695152142">Java SPI机制详解</a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Java开发环境搭建的准备工作]]></title>
    <link href="http://www.citynight.cn/blog/15989690336270.html"/>
    <updated>2020-09-01T22:03:53+08:00</updated>
    <id>http://www.citynight.cn/blog/15989690336270.html</id>
    <content type="html"><![CDATA[
<h3><a id="%E7%BD%91%E7%BB%9C%E9%85%8D%E7%BD%AE%EF%BC%88%E4%BF%AE%E6%94%B9hosts%EF%BC%89" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>网络配置（修改hosts）</h3>
<h4><a id="%E4%BB%80%E4%B9%88%E6%97%B6%E5%80%99%E9%9C%80%E8%A6%81" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>什么时候需要</h4>
<p>比如我们在安装<a href="https://brew.sh">homeBrew</a>的时候会遇到</p>
<pre><code>curl: (7) Failed to connect to raw.githubusercontent.com port 443: Connection refused
</code></pre>
<p>发现脚本需要到 <code>raw.githubusercontent.com</code>上拉取代码,但是域名的DNS解析被污染，导致DNS解析过程不能获取正确的IP地址。</p>
<h4><a id="%E6%80%8E%E6%A0%B7%E6%89%BE%E6%9B%BF%E6%8D%A2" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>怎样找替换</h4>
<p>打开 <a href="https://www.ipaddress.com/">https://www.ipaddress.com/</a> 输入访问不了的域名,即<code>raw.githubusercontent.com</code><br />
可以看到<br />
<img src="media/15989690336270/15989690890684.jpg" alt="" /><br />
<img src="media/15989690336270/15989691067248.jpg" alt="" /></p>
<p>把找到的IP直接在<code>hosts</code>中映射就好了</p>
<h4><a id="%E6%80%8E%E6%A0%B7%E8%BF%9B%E8%A1%8Chosts%E6%96%87%E4%BB%B6%E4%BF%AE%E6%94%B9" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>怎样进行hosts文件修改</h4>
<p>为了方便进行网络资源访问比如<code>github</code>我们需要对<code>hosts</code>文件进行修改，对于Mac常规的方式是在<code>Finder</code>中使用 快捷键<code> command + shift + G</code>。<br />
<img src="media/15989690336270/15989691425407.jpg" alt="" /></p>
<p>这里我推荐用第二种<a href="https://github.com/oldj/SwitchHosts">SwitchHosts</a><br />
<img src="media/15989690336270/15989691528858.jpg" alt="" /></p>
<h3><a id="%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>开发环境</h3>
<h4><a id="java%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>Java环境搭建</h4>
<h5><a id="jdk%E4%B8%8B%E8%BD%BD" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>JDK下载</h5>
<p>Google <code>jdk download</code> 我们会找到Oracle网站，选择<a href="https://www.oracle.com/java/technologies/javase/javase-jdk8-downloads.html">jdk8版本下载</a></p>
<h5><a id="java%E9%85%8D%E7%BD%AE%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>Java配置环境变量</h5>
<p>打开<code>terminal</code>,我喜欢用 <a href="https://iterm2.com/">iTerm2</a> 搭配<a href="https://ohmyz.sh/">Oh My Zsh</a>. 输入<code>code .bash_profile</code>(code 是vscode命令,怎么配置用vscode在terminal中使用见<a href="https://code.visualstudio.com/docs/setup/mac">Visual Studio Code on macOS<br />
</a>)</p>
<p><img src="media/15989690336270/15989691773089.jpg" alt="" /></p>
<p>如果是第一次配置环境变量，使用命令 <code>touch .bash_profile</code> 创建一个名为 <strong>.bash_profile</strong> 隐藏配置文件(怎么查看隐藏文件(快捷键 <code>command + shift + .</code>));</p>
<p>查看当前安装的Java版本号<br />
在<code>terminal</code>中输入<code>java -version</code><br />
<img src="media/15989690336270/15989691952963.jpg" alt="" /></p>
<p>在配置文件中输入下面的内容：</p>
<pre><code class="language-shell">JAVA_HOME=/Library/Java/JavaVirtualMachines/jdk1.8.0_201.jdk/Contents/Home
PATH=$JAVA_HOME/bin:$PATH:.
CLASSPATH=$JAVA_HOME/lib/tools.jar:$JAVA_HOME/lib/dt.jar:.
export JAVA_HOME
export PATH
export CLASSPATH
</code></pre>
<p>JAVA_Home 中版本号就是上面terminal中显示的版本号,当然这个办法比较土，也可以按照苹果开发者网站上的办法找<a href="https://developer.apple.com/library/archive/qa/qa1170/_index.html">Important Java Directories on Mac OS </a><br />
在terminal中输入<code>ls -l /usr/libexec/java_home</code><br />
<img src="media/15989690336270/15989692092687.jpg" alt="" /></p>
<p>出现文件的时候可以按住<code>command</code>点击目录跳转也就会显示出上面截图中的路径</p>
<h5><a id="%E9%98%85%E8%AF%BB%E5%85%AC%E5%8F%B8%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>阅读公司技术文档</h5>
<p>文档地址：<a href="http://10.10.70.44:7202/pages/viewpage.action?pageId=13729808">SpringCloud微服务架构</a></p>
<p>这篇文档中说明了项目的模块划分和环境信息等</p>
<h5><a id="%E5%BF%AB%E9%80%9F%E5%AF%BC%E5%8C%85maven" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>快速导包(Maven)</h5>
<p>第一运行下载依赖包非常慢，然后同事把他电脑中的资源直接打包发给我替换掉原有的资源就完成了依赖包的下载过程。<br />
<img src="media/15989690336270/15989692306566.jpg" alt="" /></p>
<p>进入该文件夹，然后替换资源文件<br />
<img src="media/15989690336270/15989692404224.jpg" alt="" /></p>
<hr />
<p>到这里所有的前期准备工作都做完了可以运行项目了。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[529. Minesweeper（529. 扫雷游戏）]]></title>
    <link href="http://www.citynight.cn/blog/15978901087507.html"/>
    <updated>2020-08-20T10:21:48+08:00</updated>
    <id>http://www.citynight.cn/blog/15978901087507.html</id>
    <content type="html"><![CDATA[
<p>题目地址:<a href="https://leetcode-cn.com/problems/minesweeper/">529. 扫雷游戏</a></p>
<p>Let's play the minesweeper game (<a href="https://en.wikipedia.org/wiki/Minesweeper_(video_game)">Wikipedia</a>, <a href="http://minesweeperonline.com/">online game</a>)!</p>
<p>You are given a 2D char matrix representing the game board. <strong>'M'</strong> represents an <strong>unrevealed</strong> mine, <strong>'E'</strong> represents an <strong>unrevealed</strong> empty square, <strong>'B'</strong> represents a ** revealed** blank square that has no adjacent (above, below, left, right, and all 4 diagonals) mines, digit ('1' to '8') represents how many mines are adjacent to this ** revealed** square, and finally <strong>'X'</strong> represents a ** revealed** mine.</p>
<p>Now given the next click position (row and column indices) among all the <strong>unrevealed</strong> squares (<strong>'M'</strong> or <strong>'E'</strong>), return the board after revealing this position according to the following rules:</p>
<ol>
<li>If a mine (<strong>'M'</strong>) is ** revealed**, then the game is over - change it to <strong>'X'</strong>.</li>
<li>If an empty square (<strong>'E'</strong>) with <strong>no adjacent mines</strong> is revealed, then change it to revealed blank (<strong>'B'</strong>) and all of its adjacent <strong>unrevealed</strong> squares should be revealed recursively.</li>
<li>If an empty square (<strong>'E'</strong>) with <strong>at least one adjacent mine</strong> is revealed, then change it to a digit ('1' to '8') representing the number of adjacent mines.</li>
<li>Return the board when no more squares will be ** revealed**.</li>
</ol>
<p><strong>Example 1:</strong></p>
<p><strong>Input:</strong></p>
<pre><code>[['E', 'E', 'E', 'E', 'E'],
 ['E', 'E', 'M', 'E', 'E'],
 ['E', 'E', 'E', 'E', 'E'],
 ['E', 'E', 'E', 'E', 'E']]

Click : [3,0]
</code></pre>
<p><strong>Output:</strong></p>
<pre><code>[['B', '1', 'E', '1', 'B'],
 ['B', '1', 'M', '1', 'B'],
 ['B', '1', '1', '1', 'B'],
 ['B', 'B', 'B', 'B', 'B']]

</code></pre>
<p><strong>Explanation:</strong><br />
<img src="media/15978901087507/15978907322780.png" alt="" style="width:532px;" /></p>
<ul>
<li><strong>Example 2:</strong></li>
</ul>
<p><strong>Input:</strong></p>
<pre><code>[['B', '1', 'E', '1', 'B'],
 ['B', '1', 'M', '1', 'B'],
 ['B', '1', '1', '1', 'B'],
 ['B', 'B', 'B', 'B', 'B']]

Click : [1,2]
</code></pre>
<p><strong>Output:</strong></p>
<pre><code>[['B', '1', 'E', '1', 'B'],
 ['B', '1', 'X', '1', 'B'],
 ['B', '1', '1', '1', 'B'],
 ['B', 'B', 'B', 'B', 'B']]

</code></pre>
<p><strong>Explanation:</strong><br />
<img src="media/15978901087507/15978909318647.png" alt="" style="width:511px;" /></p>
<p><strong>Note:</strong></p>
<ol>
<li>The range of the input matrix's height and width is [1,50].</li>
<li>The click position will only be an unrevealed square ('M' or 'E'), which also means the input board contains at least one clickable square.</li>
<li>The input board won't be a stage when game is over (some mines have been revealed).</li>
<li>For simplicity, not mentioned rules should be ignored in this problem. For example, you don't need to reveal all the unrevealed mines when the game is over, consider any cases that you will win the game or flag any squares.</li>
</ol>
<p>思路：<br />
深度优先</p>
<pre><code class="language-Java">public class Solution {
    // 坐标相邻的8个方向 上，下，左，右，左上，左下，右上，右下
    private int[][] dirs = {{0,1},{0,-1},{-1,0},{1,0},{-1,1},{-1,-1},{1,1},{1,-1}};
    public char[][] updateBoard(char[][] board, int[] click) {
        // 获取当前坐标
        int row = click[0], col = click[1];
        // 边界条件
        int m = board.length, n = board[0].length;

        // 如果找到M（未挖出的雷）或者X（已挖出的雷）游戏结束
        if (board[row][col] == 'M' || board[row][col] == 'X') {
            board[row][col] = 'X';
            return board;
        }

        // 找周边有几个雷
        int num = 0;
        for (int[] dir : dirs) {
            int newRow = dir[0] + row;
            int newCol = dir[1] + col;
            // 如果周围是未被揭开的雷，周围雷的数量递增
            if (newRow &gt;= 0 &amp;&amp; newCol &gt;= 0 &amp;&amp; newRow &lt; m &amp;&amp; newCol &lt; n &amp;&amp; board[newRow][newCol] == 'M') {
                num++;
            }
        }

        // 如果周围有雷
        if (num &gt; 0) {
            board[row][col] = (char) (num + '0');
            return board;
        }

        // 如果一个没有相邻地雷的空方块（'E'）被挖出，修改它为（'B'）
        board[row][col] = 'B';
        for (int[] dir : dirs) {
            int newRow = dir[0] + row;
            int newCol = dir[1] + col;
            // 所有和其相邻的未挖出方块都应该被递归地揭露。
            if (newRow &gt;= 0 &amp;&amp; newCol &gt;= 0 &amp;&amp; newRow &lt; m &amp;&amp; newCol &lt; n &amp;&amp; board[newRow][newCol] == 'E') {
                updateBoard(board,new int[]{newRow,newCol});
            }
        }

        return board;
    }
}
</code></pre>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[647. Palindromic Substrings]]></title>
    <link href="http://www.citynight.cn/blog/15978472756793.html"/>
    <updated>2020-08-19T22:27:55+08:00</updated>
    <id>http://www.citynight.cn/blog/15978472756793.html</id>
    <content type="html"><![CDATA[
<p>题目地址:<a href="https://leetcode-cn.com/problems/palindromic-substrings/">647. 回文子串</a><br />
Given a string, your task is to count how many palindromic substrings in this string.</p>
<p>The substrings with different start indexes or end indexes are counted as different substrings even they consist of same characters.</p>
<ul>
<li><strong>Example 1:</strong></li>
</ul>
<pre><code>Input: &quot;abc&quot;
Output: 3
Explanation: Three palindromic strings: &quot;a&quot;, &quot;b&quot;, &quot;c&quot;.
</code></pre>
<ul>
<li><strong>Example 2:</strong></li>
</ul>
<pre><code>Input: &quot;aaa&quot;
Output: 6
Explanation: Six palindromic strings: &quot;a&quot;, &quot;a&quot;, &quot;a&quot;, &quot;aa&quot;, &quot;aa&quot;, &quot;aaa&quot;.
</code></pre>
<p><strong>Note:</strong><br />
The input string length won't exceed 1000.</p>
<p>解题思路：</p>
<p>使用中心扩展方法,每个字符都是一个中心，或者两个相邻一样的字符是一个中心，然后向左右分别递进判断能否形成回文</p>
<p>举个🌰</p>
<pre><code>  比如字符串是   a   b   a
  遍历字符串   &lt;-⬆-&gt;             回文子串 a  左边没有数据所以只有这一个
                 &lt;-⬆-&gt;          回文子串 b  一个指针向左走一个指针向右走 判断是否还有对应的子串（aba）， 左边 a 右边 a 能形成字串，再走没有数据
                     &lt;-⬆-&gt;     回文字串 a 右边没有数据所以结束
  根据上面的流程 最终的字串为  a，b, aba, a 共4个
 
  当然还有两个字符一样的情况
  比如字符串是   a   b   b   a
  这样就需要      &lt;-⬆  ⬆-&gt;      从中间两个向外判断是否能形成回文子串  
</code></pre>
<p>参考代码：</p>
<pre><code class="language-Java">class Solution {
    // 回文字串数量
    int count = 0;
    public int countSubstrings(String s) {
        if (s == null || s.length() == 0) {
            return 0;
        }
        for (int i = 0; i &lt; s.length(); i++) {
            // aba -&gt; i 为 b位置
            helper(s,i,i);
            // abba -&gt; i 为第一个b位置
            helper(s,i,i+1);
        }
        return count;
    }

    private void helper(String s, int left, int right) {
        while (left &gt;= 0 &amp;&amp; right &lt;= s.length() - 1 &amp;&amp; s.charAt(left) == s.charAt(right)) {
            count++;
            left--;
            right++;
        }
    }
}
</code></pre>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[setProperty 应用]]></title>
    <link href="http://www.citynight.cn/blog/15966161528946.html"/>
    <updated>2020-08-05T16:29:12+08:00</updated>
    <id>http://www.citynight.cn/blog/15966161528946.html</id>
    <content type="html"><![CDATA[
<p>项目中使用<code>Nacos</code>,想覆盖nacos的默认配置,配置信息如下:</p>
<pre><code>/**
 * @author cloud
 * @date 2019-10-31
 * &lt;p&gt;
 * 覆盖nacos 默认配置
 */
public interface ConfigConstants {
    /**
     * The System property name of  Standalone mode
     */
    String STANDALONE_MODE = &quot;nacos.standalone&quot;;

    /**
     * tomcat 目录
     */
    String TOMCAT_DIR = &quot;server.tomcat.basedir&quot;;

    /**
     * tomcat 日志配置
     */
    String TOMCAT_ACCESS_LOG = &quot;server.tomcat.accesslog.enabled&quot;;

    /**
     * 是否开启认证
     */
    String AUTH_ENABLED = &quot;nacos.core.auth.enabled&quot;;
}
</code></pre>
<p>在启动类中设置想要覆盖配置的值</p>
<pre><code>/**
 * @author nacos
 * &lt;p&gt;
 * nacos console 源码运行，方便开发
 * 生产建议从官网下载最新版配置运行
 */
@EnableScheduling
@SpringBootApplication
public class CloudNacosApplication {

	public static void main(String[] args) {
		System.setProperty(ConfigConstants.TOMCAT_DIR, &quot;logs&quot;);
		System.setProperty(ConfigConstants.TOMCAT_ACCESS_LOG, &quot;false&quot;);
        System.setProperty(ConfigConstants.STANDALONE_MODE, &quot;true&quot;);
        System.setProperty(ConfigConstants.AUTH_ENABLED, &quot;false&quot;);
		SpringApplication.run(CloudNacosApplication.class, args);
	}
}

</code></pre>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[devtools 热启动]]></title>
    <link href="http://www.citynight.cn/blog/15965236438323.html"/>
    <updated>2020-08-04T14:47:23+08:00</updated>
    <id>http://www.citynight.cn/blog/15965236438323.html</id>
    <content type="html"><![CDATA[
<p>第一步:添加pom</p>
<pre><code>        &lt;dependency&gt;
            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
            &lt;artifactId&gt;spring-boot-devtools&lt;/artifactId&gt;
            &lt;scope&gt;runtime&lt;/scope&gt;
            &lt;optional&gt;true&lt;/optional&gt;
        &lt;/dependency&gt;
</code></pre>
<p>第二步 添加插件到父pom中</p>
<pre><code>  &lt;build&gt;
    &lt;plugins&gt;
      &lt;plugin&gt;
        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
        &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;
        &lt;configuration&gt;
          &lt;fork&gt;true&lt;/fork&gt;
          &lt;addResources&gt;true&lt;/addResources&gt;
        &lt;/configuration&gt;
      &lt;/plugin&gt;
    &lt;/plugins&gt;
  &lt;/build&gt;
</code></pre>
<p>第三步 开启自动编译选项<br />
Setting-&gt;Build-&gt;Compiler<br />
<img src="media/15965236438323/15965240806182.jpg" alt="" style="width:475px;" /></p>
<p>第四步: 修改Registry</p>
<p>双击 Shift 选中Action 输入 Registry 打开<br />
<img src="media/15965236438323/15965244242502.jpg" alt="" style="width:655px;" /><br />
修改为选中<br />
<img src="media/15965236438323/15965245587023.jpg" alt="" style="width:950px;" /><br />
第五步: 重启IDEA</p>

]]></content>
  </entry>
  
</feed>
